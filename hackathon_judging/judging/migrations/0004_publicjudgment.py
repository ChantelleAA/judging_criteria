# Generated by Django 5.2.3 on 2025-06-24 16:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('judging', '0003_judge_judge_type_alter_score_score'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublicJudgment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantum_tech_quality', models.IntegerField(help_text='Technical implementation and quantum concepts (40% weight)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('social_impact', models.IntegerField(help_text='Potential to benefit society (25% weight)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('innovation', models.IntegerField(help_text='Creativity and novelty of approach (20% weight)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('presentation', models.IntegerField(help_text='How well the idea is communicated (10% weight)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('business_viability', models.IntegerField(help_text='Potential for real-world implementation (5% weight)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comments', models.TextField(blank=True, help_text='Overall feedback', null=True)),
                ('comment_quantum_tech', models.TextField(blank=True, null=True)),
                ('comment_social_impact', models.TextField(blank=True, null=True)),
                ('comment_innovation', models.TextField(blank=True, null=True)),
                ('comment_presentation', models.TextField(blank=True, null=True)),
                ('comment_business_viability', models.TextField(blank=True, null=True)),
                ('voter_ip', models.GenericIPAddressField(help_text='IP address of the voter')),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('voter_email', models.EmailField(blank=True, help_text='Optional email for verification', max_length=254, null=True)),
                ('voter_name', models.CharField(blank=True, help_text='Optional name', max_length=100, null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='judging.team')),
            ],
            options={
                'verbose_name': 'Public Judgment',
                'verbose_name_plural': 'Public Judgments',
                'ordering': ['-created_at'],
                'unique_together': {('team', 'voter_ip')},
            },
        ),
    ]
